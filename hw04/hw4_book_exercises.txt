5.9 Exercises 1 - 5, and 13
1. In Listing 5.4 (addnonnegatives.py) could the condition of the if statement have used > instead of >= and achieved the same results? Why?

[Ans]: Yes, it can still achieve the same result. When entry = 0, sum+=entry will still be the same, when it enters the "if" loop. 
This means, the sum will not change no mater entry =0 enters the if loop or not.

2. In Listing 5.4 (addnonnegatives.py) could the condition of the while statement have used > instead
of >= and achieved the same results? Why?

[Ans]: No. For example, if the user inputs [4,2,0,1], using >= will result in 7, while using > will result in 6
In that case, 0 and 1 will not enter the while loop.

3. In Listing 5.4 (addnonnegatives.py) what would happen if the statement
entry = int(input()) # Get the value
were moved out of the loop? Is moving the assignment out of the loop a good or bad thing to do?
Why?

[Ans]: It it were moved out of the loop, then the user can no longer enter consecutive nonnegative numbers. So it is a bad idea.

4. 100

5. The program will keep running and keeps printing the '*'

13. Provide the exact sequence of integers specified by each of the following range expressions.
(a) range(5)  - [0,1,2,3,4]
(b) range(5, 10) - [5,6,7,8,9]
(c) range(5, 20, 3) - [5,8,11,14,17]
(d) range(20, 5, -1) - [20,19,18,17,16,15,14,13,12,11,10,9,8,7,6]
(e) range(20, 5, -3) - [20, 17, 14, 11, 8]
(f) range(10, 5) - []
(g) range(0) - []
(h) range(10, 101, 10) - [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
(i) range(10, -1, -1) - [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
(j) range(-3, 4) -  [-3, -2, -1, 0, 1, 2, 3]
(k) range(0, 10, 1) - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
